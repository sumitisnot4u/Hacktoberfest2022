/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode * head=l1;
        
        
        ListNode *prev=NULL;
        
        long long div=0;
        
        while(l1!=NULL && l2!=NULL){
            l1->val=l1->val+l2->val+div;
            div=l1->val/10;
            l1->val%=10;
            
            prev=l1;
            
            l1=l1->next;
            l2=l2->next;
        }
        if(l1==NULL){
            prev->next=l2;
            l1=l2;
        }
        
        while(l1!=nullptr){
            l1->val=l1->val+div;
            div=l1->val/10;
            l1->val%=10;
            
            prev=l1;
            
            l1=l1->next;
        }
        
        if(div!=0){
            ListNode *extra=new ListNode (div);
            prev->next=extra;
        }
        
        return head;
    }
};
